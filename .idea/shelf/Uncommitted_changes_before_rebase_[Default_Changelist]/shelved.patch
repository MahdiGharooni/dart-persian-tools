Index: lib/src/Sheba/methods.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import './constants.dart';\n\n/// Takes Sheba code and gives information from it\nclass Sheba {\n  final String _shebaCode;\n  final pattern = RegExp(r'IR[0-9]{24}');\n  final patternCode = RegExp(r'IR[0-9]{2}([0-9]{3})[0-9]{19}');\n\n  Sheba(this._shebaCode);\n\n  int _iso7064Mod97_10(String iban) {\n    String remainder = iban, block;\n    while (remainder.length > 2) {\n      // like slice in TS\n      try {\n        block = remainder.substring(0, 9);\n      } on RangeError catch (e) {\n        block = remainder;\n      }\n      remainder =\n          '${int.parse(block) % 97}' + remainder.substring(block.length);\n    }\n    return int.parse(remainder) % 97;\n  }\n\n  bool get isValid {\n    final shebaCode = _shebaCode;\n    if (shebaCode.length != 26) return false;\n    if (!pattern.hasMatch(shebaCode)) return false;\n    final d1 = shebaCode.codeUnitAt(0) - 65 + 10;\n    final d2 = shebaCode.codeUnitAt(1) - 65 + 10;\n    var iban = shebaCode.substring(4);\n    iban += '$d1$d2${shebaCode.substring(2, 4)}';\n    final remainder = _iso7064Mod97_10(iban);\n    return remainder != 1 ? false : true;\n  }\n\n  Map<String, dynamic>? call() {\n    final shebaCode = _shebaCode;\n    if (!isValid) return null;\n    final bankCode = patternCode.firstMatch(shebaCode)?[1] ?? '';\n    var bank = banksInfo[bankCode];\n    if (bank == null) return null;\n    if (bank['accountNumberAvailable']) {\n      final data = bank['process'](shebaCode);\n      bank['accountNumber'] = data['normal'];\n      bank['formattedAccountNumber'] = data['formatted'];\n    }\n    bank.remove('process');\n    return bank;\n  }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/src/Sheba/methods.dart b/lib/src/Sheba/methods.dart
--- a/lib/src/Sheba/methods.dart	(revision 7834fbf090dd8a9b779d9a6e50495b07d1e660ee)
+++ b/lib/src/Sheba/methods.dart	(date 1616520557714)
@@ -3,11 +3,16 @@
 /// Takes Sheba code and gives information from it
 class Sheba {
   final String _shebaCode;
+
+  /// [RegExp] to checking validation of the sheba
   final pattern = RegExp(r'IR[0-9]{24}');
+
+  /// [RegExp] to finding bank code
   final patternCode = RegExp(r'IR[0-9]{2}([0-9]{3})[0-9]{19}');
 
   Sheba(this._shebaCode);
 
+  // TODO:adding documentation
   int _iso7064Mod97_10(String iban) {
     String remainder = iban, block;
     while (remainder.length > 2) {
@@ -23,6 +28,7 @@
     return int.parse(remainder) % 97;
   }
 
+  /// Checks validation of the sheba
   bool get isValid {
     final shebaCode = _shebaCode;
     if (shebaCode.length != 26) return false;
@@ -35,6 +41,7 @@
     return remainder != 1 ? false : true;
   }
 
+  /// Returns all information from sheba code
   Map<String, dynamic>? call() {
     final shebaCode = _shebaCode;
     if (!isValid) return null;
